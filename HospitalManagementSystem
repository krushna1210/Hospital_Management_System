package HospitalManagement;

import java.sql.*;
import java.util.Scanner;

public class HospitalManagementSystem {

    private static final String URL="jdbc:mysql://localhost:3306/hospital";
    private static final String  USERNAME="root";
    private  static final String PASSWORD="root";

    public static void main(String args[]){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
        }
        catch(Exception e){
            e.printStackTrace();
        }

        Scanner scanner=new Scanner(System.in);

        try{
            Connection connection= DriverManager.getConnection(URL,USERNAME,PASSWORD);
            Patient patient=new Patient(connection,scanner);
            Doctor doctor=new Doctor(connection);
            while(true){
                System.out.println("HOSPITAL MANAGEMENT SYSTEM ");
                System.out.println("1. add Patient");
                System.out.println("2. view Patient");
                System.out.println("3. view Doctors");
                System.out.println("4. Book Appointment");
                System.out.println("5. Exit");
                System.out.println("Enetr Your Choice: ");
                int choice=scanner.nextInt();

                switch(choice){
                    case 1:
                        patient.addPatient();
                        break;
                        // add patients
                    case 2:
                        //view patients
                        patient.viewPatient();
                        break;
                    case 3:
                        // view doctors
                        doctor.viewDoctors();
                        break;
                    case 4:
                        // Book Appointment
                        bookAppointment(patient,doctor,connection,scanner);
                        break;
                    case 5:
                        return ;
                    default:
                        System.out.println("Enter Valid Choice !...");
                        break;
                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }

    public static void bookAppointment(Patient patient,Doctor doctor,Connection connection,Scanner scanner){
        System.out.println("Enter Patient Id: ");
        int patientId=scanner.nextInt();
        System.out.println("Enter Doctor Id: ");
        int doctorId=scanner.nextInt();
        System.out.println("Enter appointment date (YYYY-MM-DD): ");
        String appointmentDate=scanner.next();
        if(patient.getPatientById(patientId) && doctor.getDoctorsById(doctorId)){
            if(checkDoctorAvailability(doctorId,appointmentDate,connection)){
                String appointmentQuery="insert into appointments (patient_id,doctors_id,appointment_date) values (?,?,?)";
                try{
                    PreparedStatement preparedStatement=connection.prepareStatement(appointmentQuery);
                    preparedStatement.setInt(1,patientId);
                    preparedStatement.setInt(2,doctorId);
                    preparedStatement.setString(3,appointmentDate);
                    int affected=preparedStatement.executeUpdate();
                    if(affected>0){
                        System.out.println("Appointment Booked !");
                    }
                    else{
                        System.out.println("Failed to Book Appointment..");
                    }

                }
                catch (SQLException e){
                    e.printStackTrace();
                }
            }
            else {
                System.out.println("Doctor is not available on this date ");
            }
        }
        else{
            System.out.println("Either patient or doctor doesn't Exsist....");
        }


    }


    public static boolean checkDoctorAvailability(int doctorId, String appointmentDate, Connection connection){
        String query=" select count(*) from appointments where doctors_id=? and appointment_date=?";
        try{
            PreparedStatement preparedStatement=connection.prepareStatement(query);
            preparedStatement.setInt(1,doctorId);
            preparedStatement.setString(2,appointmentDate);
            ResultSet resultSet=preparedStatement.executeQuery();
            if(resultSet.next()){
                int count=resultSet.getInt(1);
                if(count==0){
                    return true;
                }
                else{
                    return false;
                }
            }
        }
        catch(SQLException e){
            e.printStackTrace();
        }
        return false;
    }
}
